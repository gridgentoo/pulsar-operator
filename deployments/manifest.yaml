# create the namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: pulsar-operator
---
# Source: crds/pulsar.monime.sl_pulsarclusters.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: pulsarclusters.pulsar.monime.sl
spec:
  group: pulsar.monime.sl
  names:
    kind: PulsarCluster
    listKind: PulsarClusterList
    plural: pulsarclusters
    singular: pulsarcluster
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PulsarCluster is the Schema for the pulsarclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PulsarClusterSpec defines the desired state of PulsarCluster
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: Annotations defines the annotations to attach to the
                    broker statefulset and services
                  type: object
                bookkeeperClusterUri:
                  description: BookkeeperClusterUri specifies the URI of the existing
                    BookKeeper cluster that you want to use. see https://pulsar.apache.org/docs/en/reference-cli-tools/#initialize-cluster-metadata
                  type: string
                brokerConfig:
                  additionalProperties:
                    type: string
                  description: BrokerConfig defines the Bookkeeper configurations to
                    override the bk_server.conf
                  type: object
                clusterDomain:
                  description: ClusterDomain defines the cluster domain for the cluster
                    It defaults to cluster.local
                  type: string
                configurationStoreServers:
                  description: ConfigurationStoreServers specifies the configuration
                    store connection string (as a comma-separated list)
                  type: string
                connectors:
                  properties:
                    builtin:
                      items:
                        type: string
                      type: array
                    custom:
                      items:
                        properties:
                          headers:
                            additionalProperties:
                              type: string
                            type: object
                          url:
                            type: string
                        type: object
                      type: array
                  type: object
                env:
                  description: Env defines environment variables for the broker statefulset
                    pods
                  items:
                    description: EnvVar represents an environment variable present in
                      a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using
                        the previous defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                        $$(VAR_NAME). Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot
                          be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key
                                  must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must
                                  be defined
                                type: boolean
                            required:
                              - key
                            type: object
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                imagePullPolicy:
                  description: ImagePullPolicy describes a policy for if/when to pull
                    the image
                  type: string
                jvmOptions:
                  description: JVMOptions defines the JVM options for pulsar broker;
                    this is useful for performance tuning. If unspecified, a reasonable
                    defaults will be set
                  properties:
                    extra:
                      description: Extra defines extra options
                      items:
                        type: string
                      type: array
                    gc:
                      description: Gc defines garbage collection options
                      items:
                        type: string
                      type: array
                    gcLogging:
                      description: GcLogging defines garbage collection logging options
                      items:
                        type: string
                      type: array
                    memory:
                      description: Memory defines memory options
                      items:
                        type: string
                      type: array
                  type: object
                kop:
                  description: KOP configures the Kafka Protocol Handler
                  properties:
                    SecuredPort:
                      description: < 0 means disabled
                      format: int32
                      type: integer
                    enabled:
                      description: Enabled defines whether this KOP is enabled or not.
                      type: boolean
                    plainTextPort:
                      description: < 0 means disabled
                      format: int32
                      type: integer
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: Labels defines the labels to attach to the broker deployment
                  type: object
                maxUnavailableNodes:
                  description: MaxUnavailableNodes defines the maximum number of nodes
                    that can be unavailable as per kubernetes PodDisruptionBudget Default
                    is 1.
                  format: int32
                  type: integer
                monitoringConfig:
                  description: MonitoringConfig
                  properties:
                    basicAuth:
                      description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                      properties:
                        password:
                          description: The secret in the service monitor namespace that
                            contains the password for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                            - key
                          type: object
                        username:
                          description: The secret in the service monitor namespace that
                            contains the username for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                            - key
                          type: object
                      type: object
                    bearerTokenFile:
                      description: BearerTokenFile defines the file to read bearer token
                        for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: BearerTokenSecret defines the secret to mount to
                        read bearer token for scraping targets. The secret needs to
                        be in the same namespace as the service monitor and accessible
                        by the Prometheus Operator.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must be
                            a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must be
                            defined
                          type: boolean
                      required:
                        - key
                      type: object
                    enabled:
                      description: Enabled defines whether this monitoring is enabled
                        or not.
                      type: boolean
                    metricRelabelings:
                      description: MetricRelabelConfigs to apply to samples before ingestion.
                      items:
                        description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source label
                              values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Default is '(.*)'
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    relabelings:
                      description: 'RelabelConfigs to apply to samples before scraping.
                      More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                      items:
                        description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source label
                              values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Default is '(.*)'
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    sampleLimit:
                      description: SampleLimit defines per-scrape limit on number of
                        scraped samples that will be accepted.
                      format: int64
                      type: integer
                    scrapeInterval:
                      description: ScrapeInterval defines the interval at which metrics
                        should be scraped
                      type: string
                    scrapeTimeout:
                      description: Timeout after which the scrape is ended
                      type: string
                    tlsConfig:
                      description: TlsConfig defines the TLS configuration to use when
                        scraping the endpoint
                      properties:
                        ca:
                          description: Struct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                        caFile:
                          description: Path to the CA cert in the Prometheus container
                            to use for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                        certFile:
                          description: Path to the client cert file in the Prometheus
                            container for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the Prometheus
                            container for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                            - key
                          type: object
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                  type: object
                podConfig:
                  description: PodConfig defines common configuration for the broker
                    pods
                  properties:
                    activeDeadlineSeconds:
                      description: Optional duration in seconds the pod may be active
                        on the node relative to StartTime before the system will actively
                        try to mark it failed and kill associated containers. Value
                        must be a positive integer.
                      format: int64
                      type: integer
                    affinity:
                      description: Affinity defines the pod's scheduling constraints
                      properties:
                        nodeAffinity:
                          description: Describes node affinity scheduling rules for
                            the pod.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e. it's a no-op).
                                  A null preferred scheduling term matches no objects
                                  (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated with
                                      the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - preference
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to an update), the system
                                may or may not try to eventually evict the pod from
                                its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: A null or empty node selector term
                                      matches no objects. The requirements of them are
                                      ANDed. The TopologySelectorTerm type implements
                                      a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              required:
                                - nodeSelectorTerms
                              type: object
                          type: object
                        podAffinity:
                          description: Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc. as some
                            other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is alpha-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to a pod label update),
                                the system may or may not try to eventually evict the
                                pod from its node. When there are multiple elements,
                                the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is alpha-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          description: Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node, zone, etc.
                            as some other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the anti-affinity expressions
                                specified by this field, but it may choose a node that
                                violates one or more of the expressions. The node that
                                is most preferred is the one with the greatest sum of
                                weights, i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                anti-affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is alpha-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the anti-affinity requirements specified
                                by this field are not met at scheduling time, the pod
                                will not be scheduled onto the node. If the anti-affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a pod
                                label update), the system may or may not try to eventually
                                evict the pod from its node. When there are multiple
                                elements, the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is alpha-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                      type: object
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations defines the annotations to attach to
                        the pod
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels defines the labels to attach to the broker
                        pod
                      type: object
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    restartPolicy:
                      description: Restart policy for all containers within the pod.
                        One of Always, OnFailure, Never. Default to Always.
                      type: string
                    securityContext:
                      description: PodSecurityContext holds pod-level security attributes
                        and common container settings. Some fields are also present
                        in container.securityContext.  Field values of container.securityContext
                        take precedence over field values of PodSecurityContext.
                      properties:
                        fsGroup:
                          description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: 
 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          
 If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                          format: int64
                          type: integer
                        fsGroupChangePolicy:
                          description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used.'
                          type: string
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a non-root
                            user. If true, the Kubelet will validate the image at runtime
                            to ensure that it does not run as UID 0 (root) and fail
                            to start the container if it does. If unset or false, no
                            such validation will be performed. May also be set in SecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata if
                            unspecified. May also be set in SecurityContext.  If set
                            in both SecurityContext and PodSecurityContext, the value
                            specified in SecurityContext takes precedence for that container.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to all containers.
                            If unspecified, the container runtime will allocate a random
                            SELinux context for each container.  May also be set in
                            SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence
                            for that container.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: The seccomp options to use by the containers
                            in this pod.
                          properties:
                            localhostProfile:
                              description: localhostProfile indicates a profile defined
                                in a file on the node should be used. The profile must
                                be preconfigured on the node to work. Must be a descending
                                path, relative to the kubelet's configured seccomp profile
                                location. Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: 
 Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                              type: string
                          required:
                            - type
                          type: object
                        supplementalGroups:
                          description: A list of groups applied to the first process
                            run in each container, in addition to the container's primary
                            GID.  If unspecified, no groups will be added to any container.
                          items:
                            format: int64
                            type: integer
                          type: array
                        sysctls:
                          description: Sysctls hold a list of namespaced sysctls used
                            for the pod. Pods with unsupported sysctls (by the container
                            runtime) might fail to launch.
                          items:
                            description: Sysctl defines a kernel parameter to be set
                            properties:
                              name:
                                description: Name of a property to set
                                type: string
                              value:
                                description: Value of a property to set
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options within a container's
                            SecurityContext will be used. If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set in
                                PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: TerminationGracePeriodSeconds is the duration in
                        seconds after the processes running in the pod are sent a termination
                        signal and the time when the processes are forcibly halted with
                        a kill signal. Set this value longer than the expected cleanup
                        time for your process. Defaults to 30 seconds.
                      format: int64
                      type: integer
                    tolerations:
                      description: Tolerations are attached to tolerates any taint that
                        matches the triple <key,value,effect> using the matching operator
                        <operator>.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified, allowed
                              values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key is empty,
                              operator must be Exists; this combination means to match
                              all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship to
                              the value. Valid operators are Exists and Equal. Defaults
                              to Equal. Exists is equivalent to wildcard for value,
                              so that a pod can tolerate all taints of a particular
                              category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the taint
                              forever (do not evict). Zero and negative values will
                              be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  type: object
                ports:
                  properties:
                    WebTLS:
                      format: int32
                      minimum: 1
                      type: integer
                    client:
                      format: int32
                      minimum: 1
                      type: integer
                    clientTLS:
                      format: int32
                      minimum: 1
                      type: integer
                    web:
                      format: int32
                      minimum: 1
                      type: integer
                  type: object
                probeConfig:
                  description: ProbeConfig defines the probing settings for the broker
                    containers
                  properties:
                    liveness:
                      properties:
                        failureThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        initialDelaySeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        periodSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        successThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        timeoutSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                    readiness:
                      properties:
                        failureThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        initialDelaySeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        periodSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        successThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        timeoutSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                    startup:
                      properties:
                        failureThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        initialDelaySeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        periodSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                        successThreshold:
                          format: int32
                          minimum: 0
                          type: integer
                        timeoutSeconds:
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                pulsarVersion:
                  description: PulsarVersion defines the version of broker to use
                  type: string
                size:
                  format: int32
                  minimum: 0
                  type: integer
                zookeeperServers:
                  description: ZookeeperServers specifies the hostname/IP address and
                    port in the format "hostname:port".
                  type: string
              required:
                - bookkeeperClusterUri
                - zookeeperServers
              type: object
            status:
              description: PulsarClusterStatus defines the observed state of PulsarCluster
              properties:
                currentReplicas:
                  description: CurrentReplicas is the number of current broker nodes
                    in the cluster
                  format: int32
                  type: integer
                metadata:
                  description: Metadata defines the metadata status of the cluster
                  properties:
                    serviceMonitorVersion:
                      type: string
                    stage:
                      description: ClusterStage represents the stage of the pulsar broker
                        cluster
                      type: string
                  type: object
                readyReplicas:
                  description: ReadyReplicas is the number of ready broker nodes in
                    the cluster
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the number of desired broker nodes in the
                    cluster
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: { }
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]

---
# Source: crds/pulsar.monime.sl_pulsarmanagers.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: pulsarmanagers.pulsar.monime.sl
spec:
  group: pulsar.monime.sl
  names:
    kind: PulsarManager
    listKind: PulsarManagerList
    plural: pulsarmanagers
    singular: pulsarmanager
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PulsarManager is the Schema for the pulsarmanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PulsarManagerSpec defines the desired state of PulsarManager
              type: object
            status:
              description: PulsarManagerStatus defines the observed state of PulsarManager
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: { }
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]

---
# Source: crds/pulsar.monime.sl_pulsarproxies.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: pulsarproxies.pulsar.monime.sl
spec:
  group: pulsar.monime.sl
  names:
    kind: PulsarProxy
    listKind: PulsarProxyList
    plural: pulsarproxies
    singular: pulsarproxy
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PulsarProxy is the Schema for the pulsarproxies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PulsarProxySpec defines the desired state of PulsarProxy
              type: object
            status:
              description: PulsarProxyStatus defines the observed state of PulsarProxy
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: { }
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]

---
# Source: pulsar-operator/templates/service_account.yaml
# @formatter:off
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: pulsar-operator
---
# Source: pulsar-operator/templates/webhookSecretAndConfigurations.yaml
# @formatter:off
  ## We generate one root CA and server certificate which are as
  ## by the webhook caBundle and server secrete. We place the both
  ## secret and webhook config files here so they share the same root CA
  ## See https://github.com/helm/helm/issues/6456#issuecomment-701727623---
kind: Secret
apiVersion: v1
type: kubernetes.io/tls
metadata:
  name: pulsar-operator-pulsar-operator-webhook-secret
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVCakNDQXU2Z0F3SUJBZ0lRTlZLZjZjL2lCd3dtTjR2UGZsbkZJakFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNRG94T0RBMkJnTlZCQU1UTDNCMWJITmhjaTF2Y0dWeVlYUnZjaTF3ZFd4ellYSXRiM0JsCmNtRjBiM0l0ZDJWaWFHOXZheTF6WlhKMmFXTmxNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF6QzJDaWFNSWM5c1VrVW5Hb20yMWc1OXpzanQxb3BUWFJVM25XcExXcWtGUGxMaGlwVlZRQzl4SwpGZzlaU2Y0VmhTSzBzd2VNT2VIdkpyZURmeGVwTTUyUjJFdUxvUDhGMUJhRW5Gei85ZVhqanNiRENCb0ZxMEt4ClNqaEd5RlVrL05yQnJKS3lPRkFtakN1Ry9hWGxPRTdpUm1PUzJuSmJ6YU5maFJ3eXVNczlCaHQ0LzdMWE1uZ3oKNXhKaWQwTkw2NGFFRXBFTENGb0dBUnR0NWdpN09VbGp4Wi95aWRzRUVIcVJtbE5EWWNxbTgrNjhOMmgrZ28zSwpnQXF0akluZ3M5S3FkRVJ5QXZIT3RDNGhUVVczakRBOEFNakZtNDE2QVhCUGpqVVpGaTVwZjdBWUFTeFJoakZ0Cm5xRTZnQUtaRGRKdWJRUWhEVVpjaWJxREc0UTcyd0lEQVFBQm80SUJKekNDQVNNd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjhHQTFVZEl3UVlNQmFBRlB1SUFPSXByZmRJZjdpaE5GRGI3aUlZb1Y2K01JSENCZ05WSFJFRWdib3dnYmVDCkwzQjFiSE5oY2kxdmNHVnlZWFJ2Y2kxd2RXeHpZWEl0YjNCbGNtRjBiM0l0ZDJWaWFHOXZheTF6WlhKMmFXTmwKZ2o5d2RXeHpZWEl0YjNCbGNtRjBiM0l0Y0hWc2MyRnlMVzl3WlhKaGRHOXlMWGRsWW1odmIyc3RjMlZ5ZG1sagpaUzV3ZFd4ellYSXRiM0JsY21GMGIzS0NRM0IxYkhOaGNpMXZjR1Z5WVhSdmNpMXdkV3h6WVhJdGIzQmxjbUYwCmIzSXRkMlZpYUc5dmF5MXpaWEoyYVdObExuQjFiSE5oY2kxdmNHVnlZWFJ2Y2k1emRtTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUNGaGFpbXVnQkxZeXRrOG1OZkRmQWFjT0VtZ3ZxY3hQVzgwNHhOVjNkOU1EQ2NuQm5mUwp4RkM0SVdmZ3R0NUFTejVrWFc4RWNKSVQrM0E5ZnNzOHYyeCs3T0pId0F4SWhoRStBRFhOSFdXbk1xclY3QnpqClIyY3Z4RVNNWngvbnFFd3QrUEhyandmb3Q1NG9iVXM2MVV0ejlhSEtuL2RHcm8yQnJ3UVV5ejcycTVCWWZrNWsKZnVyWGJMa3Z4OVhXU3d5QVlKM2xCRjcvQWNvdXVhd2hNb3B2MUY0bDJEQWpiVFQzMXRaVkd5ZmloSzVrYnJYSgpicFdSeG9GekwzR1V3MUQxUlpCTUtBVEdubVpuRkUrL0lNdm9JRXhQVWcrbGVTR2pNQ2I3UVQrZjN1elp1dkZDCjVTSFdyQWJzK0RzZDdwRzhGMHFSdjFzeDF2SjVGNFJTcDdVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBekMyQ2lhTUljOXNVa1VuR29tMjFnNTl6c2p0MW9wVFhSVTNuV3BMV3FrRlBsTGhpCnBWVlFDOXhLRmc5WlNmNFZoU0swc3dlTU9lSHZKcmVEZnhlcE01MlIyRXVMb1A4RjFCYUVuRnovOWVYampzYkQKQ0JvRnEwS3hTamhHeUZVay9OckJySkt5T0ZBbWpDdUcvYVhsT0U3aVJtT1MybkpiemFOZmhSd3l1TXM5Qmh0NAovN0xYTW5nejV4SmlkME5MNjRhRUVwRUxDRm9HQVJ0dDVnaTdPVWxqeFoveWlkc0VFSHFSbWxORFljcW04KzY4Ck4yaCtnbzNLZ0FxdGpJbmdzOUtxZEVSeUF2SE90QzRoVFVXM2pEQThBTWpGbTQxNkFYQlBqalVaRmk1cGY3QVkKQVN4UmhqRnRucUU2Z0FLWkRkSnViUVFoRFVaY2licURHNFE3MndJREFRQUJBb0lCQUgwUkkzVEx1TkcrME1wdQpObzRvUlpkcWhLUVlaK1krNWQ0OTZnbEJDTjBoUkc0RXcrZ2lhZlhaNmtlNC95aWp5dXJTWjMyQ2toS2lvcXRFCm5mZXJ0cWszUzY4Q0YzVjJ3VXM0ditKSDFVSDZuM2xGcHhHL1h0bVk4S0JWK0lXZUlob0FwY0hmMmV0RXJWZ1AKRVpFdG5Vcndod28yMUMyYS8wRG5ZZ3RYU25xR2E3TlFCam54MTFBZHJhZ0dLU1hKbEEvcDh5WGlCNnMyRlZpago4MEJsUXRCd2J2QndOUWpNZVQvNVg5TWN2ZUdSVGIzN2doOU1WSkRrWnoxRS9sOTc0alJRTVdGQmxJTWMwRFFlCkpHR0VhMGFheW85bEp5NGJwRmdLa01RUVNyNEQzYXVoR1pTK0VMeTZJbDYycEVNQ1lJT1hiRXZwWVE5V3c3Zm8KL0tjbHBvRUNnWUVBNWRHOFdWZDlFS2hMNXFxYVZmWElKeklmQllQLzFSd0RnT0JCbW9HdFVjL1hTMEpDc0lYTgpRb3g4RitnWHhrVGk3b3A5QjBQMmYxVytrWDJCb1RqZ0R3NjhnQW5SeEdJdS9xeE1iMWVmMVR5Y2dXMVdCdGVpCklHTVlvay9RSzNrUWlFWmxkSzVQR01iS3MyY05BdFJraDllSmNzODhRVW52enlaR2lCc2p5TzBDZ1lFQTQyLzgKWmJDZ21JS3hYZFRIaGx2UVJ5YVhpRUJHYjdENEl1RUZhMzY2c0pnbjdBVjJIbk4ydkFkTEdtdUxyaGx3OVc2Vwp2bmtlTkF1eGxOUWlibG9HcUd3akZtaDlqeGNjUmkyL0RVZnVwMTRoQ1dIY3R4ZVJjWktkblcvNXN3N0tQWkVNCktTYy9WNWhBNFFqK25sc1NRbzdNZ1BPbjlRaERKWWNWWGZqcDV1Y0NnWUFqSkFmZHpWL2xQU2FsOWE0MXVLaEwKUGdHNlVTMjhRMVZSem5pWmpIeVpCdVBQc1NrTFh0bzg4OGhCeTQ1ZkZjZHhYQ0cwQzdOVVV5TVprZ3hSUDZZYgpCMURSYnk3eERXWk1NTUpiUUJYRGdFb2FERUxjTnZxbVl5Q3dLTzRXeDZNOGd5OGVRVXo4NStDMHYrd2dZNk9mCmxkaUJncWllL3hRNUk0d2pZYXIrSFFLQmdBbGNEVzM5NDg0QzZ0dXFxdjliZmVtL3E5SyttbWQwUi9IZmdzS1cKdDRZVzdPV29uK0RHN2FiMVFlRDNkZ3NYSHUvcXVpZGlncHl2c29JbWJMaFAyaUJLT3ZOc0gyYXBFOC9MaUNZNgp4Slo4cUMxanFwcWFUTEQ0MEtXdSt2NmthQ3c2Y042c3I4MmlCV0Y5WmtVTUNHZFd5eEd2ZFVUL0x3dzNUK2pMCkdvMFhBb0dBT1VVYlozdlZUdldONEhkcFRSbEtOTW1teWN1OWVCZVpkNkVTNXRLdkpyOFJHVHVxaUM2NEN2TGwKanlnalo2UXJnQUY5NWhaUnhjd2hETEYrV2FicWZCS0w5VmNGL1hBZyt5NUNDY1dlS083K0RseDFJUi9HbVhPagpITnZ6ODNXZDZ2REMwK21PenA5dXBQbEc3T0dwMTdQNFdwTjJYTlFoSVVmNzZmZkFSUTA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: pulsar-operator/templates/clusterrole.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-manager-role
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters
      - pulsarmanagers
      - pulsarproxies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters/status
      - pulsarmanagers/status
      - pulsarproxies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - extensions
    resources:
      - jobs
      - pods
      - events
      - secrets
      - services
      - configmaps
      - statefulsets
      - poddisruptionbudgets
      - persistentvolumeclaims
    verbs:
      - '*'
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-proxy-role
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources:
      - tokenreviews
    verbs: [ "create" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-metrics-reader
rules:
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
# Source: pulsar-operator/templates/clusterrolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pulsar-operator-manager-role-binding
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pulsar-operator-manager-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/role.yaml
# @formatter:off
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pulsar-operator-leader-election-role
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: pulsar-operator/templates/rolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pulsar-operator-leader-election-role-binding
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pulsar-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
# @formatter:off
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-pulsar-operator-webhook-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-controller-manager-metrics-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
  
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/deployment.yaml
# @formatter:off
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsar-operator
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.1.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pulsar-operator
      app.kubernetes.io/instance: pulsar-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pulsar-operator
        app.kubernetes.io/instance: pulsar-operator
    spec:
      containers:
        - name: pulsar-operator
          image: monime/pulsar-operator:v0.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: webhook-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
          env:
            - name: LEADER_ELECTION_NAMESPACE
              value: pulsar-operator
      volumes:
        - name: webhook-certs
          secret:
            secretName: pulsar-operator-pulsar-operator-webhook-secret
      serviceAccountName: pulsar-operator
---
# Source: pulsar-operator/templates/webhookSecretAndConfigurations.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: pulsar-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /mutate-pulsar-monime-sl-v1alpha1-pulsarcluster
  failurePolicy: Fail
  name: mpulsarcluster.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /mutate-pulsar-monime-sl-v1alpha1-pulsarmanager
  failurePolicy: Fail
  name: mpulsarmanager.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarmanagers
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /mutate-pulsar-monime-sl-v1alpha1-pulsarproxy
  failurePolicy: Fail
  name: mpulsarproxy.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarproxies
  sideEffects: None
---
# Source: pulsar-operator/templates/webhookSecretAndConfigurations.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: pulsar-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /validate-pulsar-monime-sl-v1alpha1-pulsarcluster
  failurePolicy: Fail
  name: vpulsarcluster.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /validate-pulsar-monime-sl-v1alpha1-pulsarmanager
  failurePolicy: Fail
  name: vpulsarmanager.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarmanagers
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRWXBzd1I1SWRlT1E3bElXZHV0VXJSREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1URXdNVEF5TURVME1qZGFGdzB6TVRFdwpNRGd5TURVME1qZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Z1VmTjRXYklyYTVxT3V1M0RlNWpWdjlEL2Rsb0JLSFhOeEEKSHpEMkUrZ25OMkZ6a3g1Zzh3cUxnMjRhb1pIL1BvRjlDNnZkNVM0QWluZ2xmVisvelpCcDZBMDdGamdsbmJZNApnN2E1eFVsZFNrNHExVjJPTXFycVFNZENEUUpENjBmYktwSXpWVThPVG1rNXFyU0VMd21DU0FpOXBHYlJjV0lYCnN0Tm52RDNOcEpGanVsRHJ6WDVCb0xFZ3BhNlFOUFVVS1AzTVhrWE1oUVU4TDVNWFZhM0V1Z0VMeUw4ZlB6OEsKVlJKbjhVSU9jTzlGZ21adTlkVE1icnUrSXJvLzFEdE9mTUlza1dFczN6bmdIS2l6RnVrVlZsa09vQmE0S3U1dApXY3krRDlYaHF2TUNtenk4R3luMVFKNis2cjRYNTloM1Zia3lMejN2NnpYZWRkMFRnUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHVJQU9JcHJmZElmN2loTkZEYjdpSVlvVjYrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRZL3VrOHFSb3J6eTA4Uy8rOUR1MEtoZXdxekJlUmc0SDdadThDNE9XClBza2tGZzJlVlFmMjFxOTFnSXdENWZURE9HYkNzK1pXWHRvSzJDUEx6MWp1bExvaGFMZHc0Y1BkSFh0d1Zxam0KZ1Y1TWRPSHBQVkhDRHFJeTN2dnZNQVhobGJIY2t6YUJrd2RmenRQZm1vT0phVUM1c1h4RlJWTGF3TjhRczVEZwo3aFU3QVc3MTJpaTZVTUJPRUlTZXA1cnVMeWp3bnlEeVpVTEhTek5QWUhnaFNUWXRCaFFXQnB5dkJlNm9kNnpXCjV2T2RzQnZYVEVQcFcvUThKK0ZybDcvSmlJYnRuZmhyZmlKazRiR29odVpyc2ZKTXUvZ0dVdUoxSGQwV2VzYk0Kdyt4S05iSHlnVWdwckJ4cldWTy8ydzdQL1FrRXlUODBTRkV1T3lmTUhEL0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: pulsar-operator-pulsar-operator-webhook-service
      namespace: pulsar-operator
      path: /validate-pulsar-monime-sl-v1alpha1-pulsarproxy
  failurePolicy: Fail
  name: vpulsarproxy.kb.io
  rules:
  - apiGroups:
    - pulsar.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pulsarproxies
  sideEffects: None
